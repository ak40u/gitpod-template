app PocketMoney {
  wasp: {
    version: "^0.11.4"
  },
  title: "PocketMoney",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int     @id @default(autoincrement())
    username String  @unique
    password String
    children Child[]
psl=}

entity Child {=psl
    id           Int           @id @default(autoincrement())
    name         String
    balance      Float         @default(0)
    allowance    Float         @default(3)
    transactions Transaction[]
    parent       User          @relation(fields: [parentId], references: [id])
    parentId     Int
psl=}

entity Transaction {=psl
    id          Int    @id @default(autoincrement())
    description String
    amount      Float
    type        String @default("deposit")
    child       Child  @relation(fields: [childId], references: [id])
    childId     Int
psl=}

action updateBalance {
  fn: import { updateBalance } from "@server/actions.js",
  entities: [Child, Transaction]
}

action updateAllowance {
  fn: import { updateAllowance } from "@server/actions.js",
  entities: [Child]
}

query getChild {
  fn: import { getChild } from "@server/queries.js",
  entities: [Child, Transaction]
}

query getTransactions {
  fn: import { getTransactions } from "@server/queries.js",
  entities: [Transaction]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/Dashboard.jsx",
  authRequired: true
}

route SettingsRoute { path: "/settings", to: SettingsPage }
page SettingsPage {
  component: import { Settings } from "@client/pages/Settings.jsx",
  authRequired: true
}

route TransactionsRoute { path: "/transactions", to: TransactionsPage }
page TransactionsPage {
  component: import { Transactions } from "@client/pages/Transactions.jsx",
  authRequired: true
}